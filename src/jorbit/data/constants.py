import jax

jax.config.update("jax_enable_x64", True)
import jax.numpy as jnp

import erfa

################################################################################
# Misc constants
################################################################################

SPEED_OF_LIGHT = 173.14463267424034
INV_SPEED_OF_LIGHT = 1 / 173.14463267424034  # 1 / AU/day

# no longer used- horizons "ecliptic" J2000 is just a 84381.448" rotation about
# the ICRS x-axis
# ICRS_TO_BARY_ROT_MAT = jnp.array(erfa.ecm06(2451545.0, 0.0))  # J2000
# BARY_TO_ICRS_ROT_MAT = jnp.array(ICRS_TO_BARY_ROT_MAT.T)
# from mpmath import mp
# mp.dps = 24
# 84381.448 / (1/(2 * mp.pi / 360 / 60 / 60)) =
# 0.40909280422232897, then mp.cos and mp.sin of that
ICRS_TO_HORIZONS_ECLIPTIC_ROT_MAT = jnp.array(
    [
        [1.0, 0.0, 0.0],
        [0.0, 0.917482062069181818110850924, 0.397777155931913719203212896],
        [0.0, -0.397777155931913719203212896, 0.917482062069181818110850924],
    ]
)
HORIZONS_ECLIPTIC_TO_ICRS_ROT_MAT = ICRS_TO_HORIZONS_ECLIPTIC_ROT_MAT.T

EPSILON = jnp.array(jnp.finfo(jnp.float64).eps)

################################################################################
# Ephemeris constants
################################################################################

DEFAULT_PLANET_EPHEMERIS_URL = "https://ssd.jpl.nasa.gov//ftp/eph/planets/bsp/de440.bsp"
DEFAULT_ASTEROID_EPHEMERIS_URL = (
    "https://ssd.jpl.nasa.gov//ftp/eph/small_bodies/asteroids_de441/sb441-n16.bsp"
)
HUGE_ASTEROID_EPHEMERIS_URL = (
    "https://ssd.jpl.nasa.gov//ftp/eph/small_bodies/asteroids_de441/sb441-n373.bsp"
)
# also here's 441
# "https://ssd.jpl.nasa.gov//ftp/eph/planets/bsp/de441.bsp"

# These are NOT from the JPL ephemeris comments, and are in units of AU^3 / day^2
# They are actually from https://ssd.jpl.nasa.gov/ftp/xfr/gm_Horizons.pck,
# which lists Earth as apparently 1% different from its de440 and de441 value
ALL_PLANET_LOG_GMS = {
    "mercury": jnp.log(4.9125001948893175e-11),
    "venus": jnp.log(7.2434523326441177e-10),
    "earth": jnp.log(8.9970113929473456e-10),
    "mars": jnp.log(9.5495488297258106e-11),
    "jupiter": jnp.log(2.8253458252257912e-07),
    "saturn": jnp.log(8.4597059933762889e-08),
    "uranus": jnp.log(1.2920265649682398e-08),
    "neptune": jnp.log(1.5243573478851935e-08),
    "pluto": jnp.log(2.1750964648933581e-12),
    "sun": jnp.log(2.9591220828411951e-04),
}

LARGE_ASTEROID_LOG_GMS = {
    "ceres": jnp.log(1.3964518123081067e-13),
    "pallas": jnp.log(3.0471146330043194e-14),
    "juno": jnp.log(4.2823439677995e-15),
    "vesta": jnp.log(3.85480002252579e-14),
    "iris": jnp.log(2.5416014973471494e-15),
    "hygiea": jnp.log(1.2542530761640807e-14),
    "eunomia": jnp.log(4.5107799051436795e-15),
    "psyche": jnp.log(3.544500284248897e-15),
    "euphrosyne": jnp.log(2.4067012218937573e-15),
    "europa": jnp.log(5.982431526486983e-15),
    "cybele": jnp.log(2.091717595513368e-15),
    "sylvia": jnp.log(4.834560654610551e-15),
    "thisbe": jnp.log(2.652943661035635e-15),
    "camilla": jnp.log(3.2191392075878576e-15),
    "davida": jnp.log(8.683625349228651e-15),
    "interamnia": jnp.log(6.311034342087888e-15),
}

# just the sum of all the planets and large asteroids above
TOTAL_SOLAR_SYSTEM_GM = 0.000296309274879932


ALL_PLANET_IDS = {
    "mercury": 1,
    "venus": 2,
    "earth": 3,
    "mars": 4,
    "jupiter": 5,
    "saturn": 6,
    "uranus": 7,
    "neptune": 8,
    "pluto": 9,
    "sun": 10,
}

LARGE_ASTEROID_IDS = {
    "ceres": 2000001,
    "pallas": 2000002,
    "juno": 2000003,
    "vesta": 2000004,
    "iris": 2000007,
    "hygiea": 2000010,
    "eunomia": 2000015,
    "psyche": 2000016,
    "euphrosyne": 2000031,
    "europa": 2000052,
    "cybele": 2000065,
    "sylvia": 2000087,
    "thisbe": 2000088,
    "camilla": 2000107,
    "davida": 2000511,
    "interamnia": 2000704,
}

ALL_PLANET_NAMES = [
    "sun",
    "mercury",
    "venus",
    "earth",
    "mars",
    "jupiter",
    "saturn",
    "uranus",
    "neptune",
    "pluto",
]

LARGE_ASTEROID_NAMES = [
    "ceres",
    "pallas",
    "juno",
    "vesta",
    "iris",
    "hygiea",
    "eunomia",
    "psyche",
    "euphrosyne",
    "europa",
    "cybele",
    "sylvia",
    "thisbe",
    "camilla",
    "davida",
    "interamnia",
]

################################################################################
# Yoshida constants
################################################################################

# Taken from Section 4 of Yoshida 1990
# DOI: 10.1016/0375-9601(90)90092-3
Y4_Ws = jnp.array([1 / (2 - 2 ** (1 / 3))])

# Taken from Table 1 of Yoshida 1990
# DOI: 10.1016/0375-9601(90)90092-3
Y6_Ws = jnp.array([-0.117767998417887e1, 0.23557321335935, 0.78451361047756])

# Taken from Table 2 of Yoshida 1990
# DOI: 10.1016/0375-9601(90)90092-3
Y8_Ws = jnp.array(
    [
        0.102799849391985e0,
        -0.196061023297549e1,
        0.193813913762276e1,
        -0.158240635368243e0,
        -0.144485223686048e1,
        0.253693336566229e0,
        0.914844246229740e0,
    ]
)

# Created using the Decimal version of
# jorbit.utils.generate_coefficients.create_yoshida_coeffs
Y4_C = jnp.array(
    [
        0.675603595979828817023843904,
        -0.17560359597982881702384390,
        -0.17560359597982881702384390,
        0.675603595979828817023843904,
    ]
)

# Created using the Decimal version of
# jorbit.utils.generate_coefficients.create_yoshida_coeffs
Y4_D = jnp.array(
    [
        1.351207191959657634047687808,
        -1.70241438391931526809537562,
        1.351207191959657634047687808,
    ]
)

# Created using the Decimal version of
# jorbit.utils.generate_coefficients.create_yoshida_coeffs
Y6_C = jnp.array(
    [
        0.392256805238779981959140741,
        0.510043411918454980824577660,
        -0.47105338540976005035076923,
        0.068753168252525087567050832,
        0.068753168252525087567050832,
        -0.47105338540976005035076923,
        0.510043411918454980824577660,
        0.392256805238779981959140741,
    ]
)

# Created using the Decimal version of
# jorbit.utils.generate_coefficients.create_yoshida_coeffs
Y6_D = jnp.array(
    [
        0.78451361047755996391828148,
        0.23557321335934999773087383,
        -1.1776799841788700984324123,
        1.31518632068392027356651397,
        -1.1776799841788700984324123,
        0.23557321335934999773087383,
        0.78451361047755996391828148,
    ]
)

# Created using the Decimal version of
# jorbit.utils.generate_coefficients.create_yoshida_coeffs
Y8_C = jnp.array(
    [
        0.457422123114870016191702006,
        0.584268791397984516011732125,
        -0.59557945014712546094592937,
        -0.80154643611436146577453598,
        0.889949251127258450511092746,
        -0.01123554767636503193273256,
        -0.92890519179175248809521292,
        0.905626460089491464033883972,
        0.905626460089491464033883972,
        -0.92890519179175248809521292,
        -0.01123554767636503193273256,
        0.889949251127258450511092746,
        -0.80154643611436146577453598,
        -0.59557945014712546094592937,
        0.584268791397984516011732125,
        0.457422123114870016191702006,
    ]
)

# Created using the Decimal version of
# jorbit.utils.generate_coefficients.create_yoshida_coeffs
Y8_D = jnp.array(
    [
        0.91484424622974003238340401,
        0.25369333656622899964006023,
        -1.4448522368604799215319189,
        -0.1582406353682430100171529,
        1.93813913762275991103933847,
        -1.9606102329754899749048036,
        0.10279984939198499871437775,
        1.70845307078699792935339019,
        0.10279984939198499871437775,
        -1.9606102329754899749048036,
        1.93813913762275991103933847,
        -0.1582406353682430100171529,
        -1.4448522368604799215319189,
        0.25369333656622899964006023,
        0.91484424622974003238340401,
    ]
)

################################################################################
# IAS15 constants
################################################################################
# https://github.com/hannorein/rebound/blob/0b5c85d836fec20bc284d1f1bb326f418e11f591/src/integrator_ias15.c
IAS15_H = jnp.array(
    [
        0.0,
        0.0562625605369221464656521910318,
        0.180240691736892364987579942780,
        0.352624717113169637373907769648,
        0.547153626330555383001448554766,
        0.734210177215410531523210605558,
        0.885320946839095768090359771030,
        0.977520613561287501891174488626,
    ]
)

# https://github.com/hannorein/rebound/blob/0b5c85d836fec20bc284d1f1bb326f418e11f591/src/integrator_ias15.c
IAS15_RR = jnp.array(
    [
        0.0562625605369221464656522,
        0.1802406917368923649875799,
        0.1239781311999702185219278,
        0.3526247171131696373739078,
        0.2963621565762474909082556,
        0.1723840253762772723863278,
        0.5471536263305553830014486,
        0.4908910657936332365357964,
        0.3669129345936630180138686,
        0.1945289092173857456275408,
        0.7342101772154105315232106,
        0.6779476166784883850575584,
        0.5539694854785181665356307,
        0.3815854601022408941493028,
        0.1870565508848551485217621,
        0.8853209468390957680903598,
        0.8290583863021736216247076,
        0.7050802551022034031027798,
        0.5326962297259261307164520,
        0.3381673205085403850889112,
        0.1511107696236852365671492,
        0.9775206135612875018911745,
        0.9212580530243653554255223,
        0.7972799218243951369035945,
        0.6248958964481178645172667,
        0.4303669872307321188897259,
        0.2433104363458769703679639,
        0.0921996667221917338008147,
    ]
)

# https://github.com/hannorein/rebound/blob/0b5c85d836fec20bc284d1f1bb326f418e11f591/src/integrator_ias15.c
IAS15_C = jnp.array(
    [
        -0.0562625605369221464656522,
        0.0101408028300636299864818,
        -0.2365032522738145114532321,
        -0.0035758977292516175949345,
        0.0935376952594620658957485,
        -0.5891279693869841488271399,
        0.0019565654099472210769006,
        -0.0547553868890686864408084,
        0.4158812000823068616886219,
        -1.1362815957175395318285885,
        -0.0014365302363708915424460,
        0.0421585277212687077072973,
        -0.3600995965020568122897665,
        1.2501507118406910258505441,
        -1.8704917729329500633517991,
        0.0012717903090268677492943,
        -0.0387603579159067703699046,
        0.3609622434528459832253398,
        -1.4668842084004269643701553,
        2.9061362593084293014237913,
        -2.7558127197720458314421588,
    ]
)

# https://github.com/hannorein/rebound/blob/0b5c85d836fec20bc284d1f1bb326f418e11f591/src/integrator_ias15.c
IAS15_D = jnp.array(
    [
        0.0562625605369221464656522,
        0.0031654757181708292499905,
        0.2365032522738145114532321,
        0.0001780977692217433881125,
        0.0457929855060279188954539,
        0.5891279693869841488271399,
        0.0000100202365223291272096,
        0.0084318571535257015445000,
        0.2535340690545692665214616,
        1.1362815957175395318285885,
        0.0000005637641639318207610,
        0.0015297840025004658189490,
        0.0978342365324440053653648,
        0.8752546646840910912297246,
        1.8704917729329500633517991,
        0.0000000317188154017613665,
        0.0002762930909826476593130,
        0.0360285539837364596003871,
        0.5767330002770787313544596,
        2.2485887607691597933926895,
        2.7558127197720458314421588,
    ]
)

# https://github.com/hannorein/rebound/blob/0b5c85d836fec20bc284d1f1bb326f418e11f591/src/integrator_ias15.c
IAS15_EPSILON = 10 ** (-9)
IAS15_EPS_Modified = 0.1750670293218999749  # 0.1750670293218999748586614182797188957 = sqrt7(r->ri_ias15.epsilon*5040.0)
IAS15_SAFETY_FACTOR = 0.25
IAS15_MIN_DT = 0.0

################################################################################
# experimental DoubleDouble IAS15 constants
################################################################################
# double rr[28] = {0.056262560536922146465652191032, 0.180240691736892364987579942780, 0.123978131199970218521927751748, 0.352624717113169637373907769648, 0.296362156576247490908255578616, 0.172384025376277272386327826868, 0.547153626330555383001448554766, 0.490891065793633236535796363734, 0.366912934593663018013868611986, 0.194528909217385745627540785118, 0.734210177215410531523210605558, 0.677947616678488385057558414526, 0.553969485478518166535630662778, 0.381585460102240894149302835910, 0.187056550884855148521762050792, 0.885320946839095768090359771030, 0.829058386302173621624707579998, 0.705080255102203403102779828250, 0.532696229725926130716452001382, 0.338167320508540385088911216264, 0.151110769623685236567149165472, 0.977520613561287501891174488626, 0.921258053024365355425522297594, 0.797279921824395136903594545846, 0.624895896448117864517266718978, 0.430366987230732118889725933860, 0.243310436345876970367963883068, 0.092199666722191733800814717596};
# double c[21] = {-0.056262560536922146465652191032, 0.010140802830063629986481804786, -0.236503252273814511453232133812, -0.003575897729251617594934458899, 0.093537695259462065895748461145, -0.589127969386984148827139903460, 0.001956565409947221076900567060, -0.054755386889068686440808429439, 0.415881200082306861688621911191, -1.136281595717539531828588458226, -0.001436530236370891542445955300, 0.042158527721268707707297347036, -0.360099596502056812289766461058, 1.250150711840691025850544075110, -1.870491772932950063351799063784, 0.001271790309026867749294311615, -0.038760357915906770369904624821, 0.360962243452845983225339808034, -1.466884208400426964370155258310, 2.906136259308429301423791307290, -2.755812719772045831442158834814};
# double d[21] = {0.056262560536922146465652191032, 0.003165475718170829249990480039, 0.236503252273814511453232133812, 0.000178097769221743388112527922, 0.045792985506027918895453873011, 0.589127969386984148827139903460, 0.000010020236522329127209567215, 0.008431857153525701544499974163, 0.253534069054569266521461597106, 1.136281595717539531828588458226, 0.000000563764163931820761038385, 0.001529784002500465818949007959, 0.097834236532444005365364839642, 0.875254664684091091229724588369, 1.870491772932950063351799063784, 0.000000031718815401761366475855, 0.000276293090982647659313022639, 0.036028553983736459600387074127, 0.576733000277078731354459606134, 2.248588760769159793392689526008, 2.755812719772045831442158834814};
# r = ['0.05626256053692214646565219103180', '0.18024069173689236498757994278000', '0.12397813119997021852192775174820', '0.35262471711316963737390776964800', '0.29636215657624749090825557861620', '0.17238402537627727238632782686800', '0.54715362633055538300144855476600', '0.49089106579363323653579636373420', '0.36691293459366301801386861198600', '0.19452890921738574562754078511800', '0.73421017721541053152321060555800', '0.67794761667848838505755841452620', '0.55396948547851816653563066277800', '0.38158546010224089414930283591000', '0.18705655088485514852176205079200', '0.88532094683909576809035977103000', '0.82905838630217362162470757999820', '0.70508025510220340310277982825000', '0.53269622972592613071645200138200', '0.33816732050854038508891121626400', '0.15111076962368523656714916547200', '0.97752061356128750189117448862600', '0.92125805302436535542552229759420', '0.79727992182439513690359454584600', '0.62489589644811786451726671897800', '0.43036698723073211888972593386000', '0.24331043634587697036796388306800', '0.09219966672219173380081471759600']
# c = ['-0.05626256053692214646565219103180', '0.01014080283006362998648180478597', '-0.23650325227381451145323213381180', '-0.00357589772925161759493445889941', '0.09353769525946206589574846114536', '-0.58912796938698414882713990345980', '0.00195656540994722107690056706032', '-0.05475538688906868644080842943942', '0.41588120008230686168862191119100', '-1.13628159571753953182858845822580', '-0.00143653023637089154244595529986', '0.04215852772126870770729734703561', '-0.36009959650205681228976646105759', '1.25015071184069102585054407510960', '-1.87049177293295006335179906378380', '0.00127179030902686774929431161483', '-0.03876035791590677036990462482059', '0.36096224345284598322533980803401', '-1.46688420840042696437015525831000', '2.90613625930842930142379130729013', '-2.75581271977204583144215883481380']
# d = ['0.05626256053692214646565219103180', '0.00316547571817082924999048003940', '0.23650325227381451145323213381180', '0.00017809776922174338811252792197', '0.04579298550602791889545387301118', '0.58912796938698414882713990345980', '0.00001002023652232912720956721522', '0.00843185715352570154449997416277', '0.25353406905456926652146159710636', '1.13628159571753953182858845822580', '0.00000056376416393182076103838501', '0.00152978400250046581894900795890', '0.09783423653244400536536483964234', '0.87525466468409109122972458836859', '1.87049177293295006335179906378380', '0.00000003171881540176136647585482', '0.00027629309098264765931302263937', '0.03602855398373645960038707412661', '0.57673300027707873135445960613389', '2.24858876076915979339268952600833', '2.75581271977204583144215883481380']
# for i in range(len(r)):
#     print(f"IAS15_RR{str(i).zfill(2)} = DoubleDouble.from_str('{r[i]}')")
# for i in range(len(c)):
#     print(f"IAS15_C{str(i).zfill(2)} = DoubleDouble.from_str('{c[i]}')")
# for i in range(len(d)):
#     print(f"IAS15_D{str(i).zfill(2)} = DoubleDouble.from_str('{d[i]}')")
